Revo.version <- structure(list(major = "3", minor = "2.3", "BuildID" = :::BUILDID:::), class = "simple.list")
repos.date <- "2016-01-01"

if  (identical(.Platform$OS.type, "windows")) {
	options(download.file.method = "wininet")
} else {
    if (capabilities("libcurl")) {
       options(download.file.method = "libcurl")
    } else {
       options(download.file.method = "curl")
    }
}

if (.Platform$OS.type == "unix" && file.exists("/etc/issue") && (grepl("CentOS release 5", readLines("/etc/issue")[1]))) {
    warning("Warning: Packages will be downloaded using HTTP. See mran.revolutionanalytics.com/faq/#https for information on enabling secure package downloads.\n")
    options(download.file.method = "wget")
    options(repos = c(CRAN = paste("http://mran.revolutionanalytics.com/snapshot/",repos.date,sep=""))) 
} else if (.Platform$OS.type == "unix" && file.exists("/etc/issue") && (grepl("Welcome to SUSE Linux Enterprise Server 10", readLines("/etc/issue")[1]))) {
    warning("Warning: Packages will be downloaded using HTTP. See mran.revolutionanalytics.com/faq/#https for information on enabling secure package downloads.\n")
    options(download.file.method = "wget")
    options(repos = c(CRAN = paste("http://mran.revolutionanalytics.com/snapshot/",repos.date,sep="")))
} else if (.Platform$OS.type == "unix" && file.exists("/etc/issue") && (grepl("Welcome to SUSE Linux Enterprise Server 10", readLines("/etc/issue")[2]))) {
    warning("Warning: Packages will be downloaded using HTTP. See mran.revolutionanalytics.com/faq/#https for information on enabling secure package downloads.\n")
    options(download.file.method = "wget")
    options(repos = c(CRAN = paste("http://mran.revolutionanalytics.com/snapshot/",repos.date,sep="")))
} else {
    options(repos = c(CRAN = paste("https://mran.revolutionanalytics.com/snapshot/",repos.date,sep="")))
}

if (.Platform$OS.type == "windows" ) {
 options(help_type="html")
}
quiet <- any(match(c("-q", "--silent", "--quiet", "--slave"), commandArgs()), na.rm=TRUE)
	if (!quiet){
                cat( paste("Microsoft R Open ",Revo.version$major,".",Revo.version$minor,"\n",sep=""))
                cat( paste("Default CRAN mirror snapshot taken on ",repos.date,"\n",sep=""))
                cat("The enhanced R distribution from Microsoft\n",sep="")
                cat("Visit http://go.microsoft.com/fwlink/?LinkID=722555 for information\n",sep="")
                cat("about additional features.\n\n",sep="")

	}
	


load_if_installed <- function(package) {
  if (!identical(system.file(package="RevoUtilsMath"), "")) {
    do.call('library', list(package))
    return(TRUE)
  } else {
    return(FALSE)
  } 
}

if(Sys.info()["sysname"] == "Darwin"){
  local({
    options(download.file.method = "libcurl")
    hw.ncpu <- try(system('sysctl hw.physicalcpu', intern = TRUE))
	if (!inherits(hw.ncpu, "try-error")){
		ncores <- sub("hw.physicalcpu: ", "", hw.ncpu)
		msg <- "Multithreaded BLAS/LAPACK libraries detected. Using %s cores for math algorithms."
		if (!quiet){	
		    message(sprintf(msg, ncores))
		}
	}
    invisible(NULL)
  })
} else {
if(load_if_installed("RevoUtilsMath")){
  local({
    ncores <- RevoUtilsMath::getMKLthreads()
    msg <- "Multithreaded BLAS/LAPACK libraries detected. Using %d cores for math algorithms."
	if (!quiet){
        message(sprintf(msg, ncores))
	}
    invisible(NULL)
  })
} else {
    MROversion <- paste(Revo.version$major, Revo.version$minor, sep=".")
	msg <- "No performance acceleration libraries were detected. To take advantage of \nthe available processing power, also install MKL for MRO %s. Visit \nhttp://go.microsoft.com/fwlink/?LinkID=698301 for more details."
	if (!quiet){
        message(sprintf(msg, MROversion))
	}
    invisible(NULL)
}
}
